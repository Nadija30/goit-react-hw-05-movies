{"version":3,"file":"static/js/76.d7f375b3.chunk.js","mappings":"yNACA,EAA2B,uBAA3B,EAA6D,uB,2BCoD7D,EA5Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACHP,IAGLQ,EAAAA,EAAAA,IAXa,SAWYR,GACtBS,MAAK,SAAAC,GACJJ,EAAQI,EAAKL,KACd,IACAM,MAAMC,EAAAA,IACNC,SAAQ,kBAAMT,GAAW,EAAjB,GACZ,GAAE,CAACJ,KAGF,iCACE,wBAAI,UACHG,IAAW,SAACW,EAAA,EAAD,IACK,IAAhBT,EAAKU,QACJ,eAAIC,UAAWC,EAAf,SACGZ,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACR,gBAAIN,UAAWC,EAAf,WACE,uBAAIG,KACJ,yBAAG,cAAYC,MACf,gBACEE,IACED,EAAY,wCACyBA,GACjCE,EAAAA,EAAkB,UAAYJ,EAEpCK,IAAKL,MATyBD,EAD1B,OAgBZ,uBAAG,uRAIV,C,sDCnDD,MAAgC,8B,kBCEnBL,EAAS,kBACpB,gBAAKE,UAAWC,EAAhB,UACE,SAAC,KAAD,CACES,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,MACNC,SAAS,KAPO,C,gOCDhBC,EAAW,+BACXC,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,gFACCC,EADD,UACUJ,GADV,OACqBG,EADrB,oBACyCF,GADzC,SAEkBI,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,yBAGEA,EAAS3B,MAHX,kEAKA,SAAe4B,EAAtB,iDAAO,OAAP,oBAAO,WAAiCJ,EAAUK,GAA3C,gFACCJ,EADD,UACUJ,GADV,OACqBG,EADrB,oBACyCF,EADzC,kBAC0DO,GAD1D,SAEkBH,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,yBAGEA,EAAS3B,MAHX,kEAMA,SAAe8B,EAAtB,iDAAO,OAAP,oBAAO,WAAiCN,EAAUlC,GAA3C,gFACCmC,EADD,UACUJ,GADV,OACqBG,EADrB,YACiClC,EADjC,oBACoDgC,GADpD,SAEkBI,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,yBAGEA,EAAS3B,MAHX,kEAMA,SAAeF,EAAtB,iDAAO,OAAP,oBAAO,WAA8B0B,EAAUlC,GAAxC,gFACCmC,EADD,UACUJ,GADV,OACqBG,EADrB,YACiClC,EADjC,4BAC4DgC,GAD5D,SAEkBI,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,yBAGEA,EAAS3B,MAHX,kEAMA,SAAe+B,EAAtB,iDAAO,OAAP,oBAAO,WAAiCP,EAAUlC,GAA3C,gFACCmC,EADD,UACUJ,GADV,OACqBG,EADrB,YACiClC,EADjC,4BAC4DgC,GAD5D,SAEkBI,EAAAA,EAAAA,IAAUD,GAF5B,cAECE,EAFD,yBAGEA,EAAS3B,MAHX,kEAKA,SAASE,IACd8B,EAAAA,GAAAA,MACE,yXAEH,C,6ECrCM,IAAMC,EAAc,oDACdnB,EACX,mD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","services/api.js","utils/constants.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castLink\":\"Cast_castLink__xADzx\"};","import { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport { fetchMovieCast, onFetchError } from 'services/api';\n\nimport { PLACEHOLDERINFO } from 'utils/constants';\nconst endPoint = '/movie';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    fetchMovieCast(endPoint, movieId)\n      .then(data => {\n        setCast(data.cast);\n      })\n      .catch(onFetchError)\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      <h3>Cast:</h3>\n      {loading && <Loader />}\n      {cast.length !== 0 ? (\n        <ul className={css.castList}>\n          {cast.map(({ id, name, character, profile_path }) => (\n            <li className={css.castLink} key={id}>\n              <b>{name}</b>\n              <p>Character: {character}</p>\n              <img\n                src={\n                  profile_path\n                    ? `http://image.tmdb.org/t/p/w185${profile_path}`\n                    : PLACEHOLDERINFO + '?text= ' + name\n                }\n                alt={name}\n              />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>Вибачте! У нас немає інформації про акторський склад</p>\n      )}\n    </>\n  );\n};\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapperSpiner\":\"Loader_wrapperSpiner__x8OsO\"};","import css from './Loader.module.css';\nimport { RotatingLines } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <div className={css.wrapperSpiner}>\n    <RotatingLines\n      strokeColor=\"blue\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"150\"\n      visible={true}\n    />\n  </div>\n);\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0cb875d98efaa0ce49900e145a1636b9';\n\nexport async function fetchMovies(endPoint) {\n  const url = `${BASE_URL}${endPoint}?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n}\nexport async function fetchSearchMovies(endPoint, query) {\n  const url = `${BASE_URL}${endPoint}?api_key=${API_KEY}&query=${query}`;\n  const response = await axios.get(url);\n  return response.data;\n}\n\nexport async function fetchMovieDetails(endPoint, movieId) {\n  const url = `${BASE_URL}${endPoint}/${movieId}?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n}\n\nexport async function fetchMovieCast(endPoint, movieId) {\n  const url = `${BASE_URL}${endPoint}/${movieId}/credits?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n}\n\nexport async function fetchMovieReviews(endPoint, movieId) {\n  const url = `${BASE_URL}${endPoint}/${movieId}/reviews?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n}\nexport function onFetchError() {\n  toast.error(\n    'Ой! Щось пішло не так! Спробуйте оновити сторінку або зробіть інший вибір!'\n  );\n}\n","export const PLACEHOLDER = 'https://placehold.jp/16/7a7a7a/ffffff/138x255.png';\nexport const PLACEHOLDERINFO =\n  'https://placehold.jp/16/7a7a7a/ffffff/154x231.png';\n"],"names":["movieId","useParams","useState","loading","setLoading","cast","setCast","useEffect","fetchMovieCast","then","data","catch","onFetchError","finally","Loader","length","className","css","map","id","name","character","profile_path","src","PLACEHOLDERINFO","alt","strokeColor","strokeWidth","animationDuration","width","visible","BASE_URL","API_KEY","fetchMovies","endPoint","url","axios","response","fetchSearchMovies","query","fetchMovieDetails","fetchMovieReviews","toast","PLACEHOLDER"],"sourceRoot":""}